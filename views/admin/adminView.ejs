<!DOCTYPE html>
<html lang="en">
<%- include('../partials/head') %>

    <body>
        <div class="container text-center">
            <h1 class="title">Administrador</h1>
            <div class="close-session"></div>
            <div>
                <%- include('../partials/adminTableUsers') %>
                    <%- include('../partials/modalCreateUser') %>
            </div>
        </div>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
            crossorigin="anonymous"></script>
    </body>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const userForm = document.querySelector('#userForm');
            const submitBtn = document.querySelector("#submitBtn");
            const errorContainer = document.querySelector("#errorContainer");
            const closeFormBtn = document.querySelector('#closeFormBtn');
            console.log({ userForm, submitBtn, errorContainer });

            userForm.addEventListener('submit', (e) => {
                // e.preventDefault(); // Evita que el formulario se envíe de manera predeterminada.

                // Realiza la validación del formulario en el cliente aquí
                const registerEmail = userForm.querySelector('input[name="registerEmail"]').value;
                const registerPassword = userForm.querySelector('input[name="registerPassword"]').value;
                const registerPasswordCheck = userForm.querySelector('input[name="registerPasswordCheck"]').value;
                const registerCategory = userForm.querySelector('select[name="registerCategory"]').value;
                console.log({ registerEmail, registerPassword, registerPasswordCheck, registerCategory });

                // Validación simple de campos vacíos (puedes agregar más validaciones según tus necesidades)
                if (!registerEmail || !registerPassword || !registerPasswordCheck) {
                    errorContainer.innerHTML = '<p class="text-danger text-center">Todos los campos son obligatorios.</p>';
                    return;
                }

                // Ahora puedes enviar la solicitud AJAX ya que la validación del cliente fue exitosa
                const formData = new FormData(userForm);
                const dataComplete = {}
                for (const [key, value] of formData.entries()) {
                    dataComplete[key] = value;
                }

                fetch('/createUser', {
                    method: 'POST',
                    body: dataComplete,
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded', // Cambia el tipo de contenido
                    },
                })
                    .then(response => response.text())
                    .then(data => {
                        if (data.message) {
                            const errors = data.message.map((error) => `<p class="text-danger text-center">${error}</p>`);
                            errorContainer.innerHTML = errors.join("");
                        } else {
                            $('#exampleModal').modal('hide');
                        }
                    })
                    .catch((error) => {
                        console.error(error);
                    });
            });

            closeFormBtn.addEventListener('click', () => {
                errorContainer.textContent = ''
            })
        })

    </script>

</html>
<!-- document.addEventListener('DOMContentLoaded', () => {
    const userForm = document.querySelector('#userForm');
    const submitBtn = document.querySelector("#submitBtn");
    const errorContainer = document.querySelector("#errorContainer");
    const closeFormBtn = document.querySelector('#closeFormBtn');
    console.log({userForm, submitBtn, errorContainer});

    userForm.addEventListener('submit', (e) => {
        // e.preventDefault();
    })
    
    submitBtn.addEventListener('click', () => {
        console.log('click');
        const formData = new FormData(userForm)
        fetch('/createUser', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if(data.message){
                const errors = data.message.map((error) => `<p class="text-danger text-center">${error}</p>`);
                errorContainer.innerHTML = errors.join("");
            } else {
                $('#exampleModal').modal('hide');
            }
        })
        .catch((error) => {
            console.error(error);
        });
    });

    closeFormBtn.addEventListener('click', () => {
        errorContainer.textContent = ''
    })
}) -->